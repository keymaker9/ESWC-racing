///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : controldata.h
/// SOFTWARE COMPONENT NAME           : ControlData
/// GENERATED DATE                    : 2024-08-14 09:44:02
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_PPORT_CALC_AA_CONTROLDATA_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_PPORT_CALC_AA_CONTROLDATA_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "deepracer/service/controldata/svcontroldata_skeleton.h"
 
#include "ara/log/logger.h"
 
#include <mutex>
#include <thread>
 
namespace deepracer
{
namespace service
{
namespace controldata
{
namespace skeleton
{
 
class SvControlDataSkeletonImpl : public SvControlDataSkeleton
{
public:
    /// @brief Constructor
    SvControlDataSkeletonImpl(ara::core::InstanceSpecifier instanceSpec, ara::com::MethodCallProcessingMode mode = ara::com::MethodCallProcessingMode::kEvent);
    
    
    
private:
    /// @brief Logger for this port
    ara::log::Logger& m_logger;
    
    
};
 
} /// namespace skeleton
} /// namespace controldata
} /// namespace service
} /// namespace deepracer

namespace calc
{
namespace aa
{
namespace port
{
 
class ControlData
{
public:
    /// @brief Constructor
    ControlData();
    
    /// @brief Destructor
    ~ControlData();
    
    /// @brief Start port
    void Start();
    
    /// @brief Terminate port
    void Terminate();
    
    /// @brief Write event data to buffer, CEvent
    void WriteDataCEvent(const deepracer::service::controldata::skeleton::events::CEvent::SampleType& data);
     
    /// @brief Send event cyclic from buffer data, CEvent
    void SendEventCEventCyclic();
     
    /// @brief Send event directly from buffer data, CEvent
    void SendEventCEventTriggered();
     
    /// @brief Send event directly with argument, CEvent
    void SendEventCEventTriggered(const deepracer::service::controldata::skeleton::events::CEvent::SampleType& data);
     
private:
    /// @brief Logger for this port
    ara::log::Logger& m_logger;
    
    /// @brief Flag of port status
    bool m_running;
    
    /// @brief Mutex for this port
    std::mutex m_mutex;
    
    /// @brief AUTOSAR Port Interface
    std::shared_ptr<deepracer::service::controldata::skeleton::SvControlDataSkeletonImpl> m_interface;
    
    /// @brief Data for event, CEvent
    deepracer::service::controldata::skeleton::events::CEvent::SampleType m_CEventData;
};
 
} /// namespace port
} /// namespace aa
} /// namespace calc
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_PPORT_CALC_AA_CONTROLDATA_H