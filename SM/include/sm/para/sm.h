///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : sm.h
/// SOFTWARE COMPONENT NAME           : SM
/// GENERATED DATE                    : 2024-08-14 09:44:02
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_SM_PARA_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_SM_PARA_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "sm/para/port/deepracerfg.h"
#include "sm/para/port/machinefg.h"
 
#include "para/swc/port_pool.h"
 
namespace sm
{
namespace para
{
 
class SM
{
public:
    /// @brief Constructor
    SM();
    
    /// @brief Destructor
    ~SM();
    
    /// @brief Initialize software component
    bool Initialize(int argc, char *argv[]);
    
    /// @brief Start software component
    void Start();
    
    /// @brief Terminate software component
    void Terminate();
 
private:
    /// @brief Run software component
    void Run();

    /// @brief Task software component
    void TaskChangeDeepRacerFGState();

    /// @brief Parse program argument to state type member
    void ParseArgumentToState(int argc, char *argv[]);

private:
    /// @brief Pool of port
    ::para::swc::PortPool m_workers;
    
    /// @brief Logger for software component
    ara::log::Logger& m_logger;
    
    /// @brief Instance of Port {SM.DeepRacerFG}
    std::shared_ptr<sm::para::port::DeepRacerFG> m_DeepRacerFG;
    
    /// @brief Instance of Port {SM.MachineFG}
    std::shared_ptr<sm::para::port::MachineFG> m_MachineFG;

    /// @brief Starting state field type
    ara::sm::deepracerfg::skeleton::fields::Trigger::FieldType m_stateType;
};
 
} /// namespace para
} /// namespace sm
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_SM_PARA_H